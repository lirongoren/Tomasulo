#1
ADDI 6 0 0 1
R[6] = R[0] + IMM
-> R[6] = 1
#2
ADD_S 6 0 1 0
F[6] = F[0] + F[1]
-> F[6] = 1
#3
ADDI 3 0 0 0 0
R[3] = R[0] + 0
-> R[3] = 0
#4
ADDI 4 0 0 11
R[4] = R[0] + 11
-> R[4] = 11
#5
ADDI 2 0 0 1
R[2] = R[0] + 1
-> R[2] = 1
#6
ADD_S 2 0 1 0
F[2] = F[0] + F[1]
-> F[2] = 1
#7
MULT_S 5 6 2 0
F[5] = F[6] * F[2]
-> F[5] = 1
#8
ST 0 3 5 16
MEM[R[3] + 16] = F[5]
-> MEM[16] = 1
#9
ADDI 3 3 0 1
R[3] = R[3] + 1
-> R[3] = 1
#10
ADDI 2 2 0 1
R[2] = R[2] + 1
-> R[2] = 2
#11
ADD_S 2 2 1 0
F[2] = F[2] + F[1]
-> F[2] = 2
#12
BNE 0 2 4 -4
if R[2] != R[4] branch to PC-4
-> a loop that ends once R[2] = 11 (9 times)
-> MEM[17] = 1
-> R[3] = 2
-> R[2] = 3
-> F[2] = 3
-> MEM[18] = 1
-> R[3] = 3
-> R[2] = 4
-> F[2] = 4
-> MEM[19] = 1
-> R[3] = 4
-> R[2] = 5
-> F[2] = 5
-> MEM[20] = 1
-> R[3] = 5
-> R[2] = 6
-> F[2] = 6
-> MEM[21] = 1
-> R[3] = 6
-> R[2] = 7
-> F[2] = 7
-> MEM[22] = 1
-> R[3] = 7
-> R[2] = 8
-> F[2] = 8
-> MEM[23] = 1
-> R[3] = 8
-> R[2] = 9
-> F[2] = 9
-> MEM[24] = 1
-> R[3] = 9
-> R[2] = 10
-> F[2] = 10
-> MEM[25] = 1
-> R[3] = 10
-> R[2] = 11
-> F[2] = 11
-> branch not taken
#13
ADDI 6 6 0 1
R[6] = R[6] + 1
-> R[6] = 2
#14
ADD_S 6 6 1 0
F[6] = F[6] + F[1]
-> F[6] = 2
#15
BNE 0 6 4 -9
if R[6] != R[4] branch to PC-9
-> a loop that ends once R[6] = 11 (9 times)